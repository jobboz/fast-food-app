import jwt from 'jsonwebtoken';
// require('dotenv').config();
require('dotenv').config();



/**
 * @param {obj} req
 * @param {obj} res
 * @param {obj} next
 * @returns {obj} failure error message on bad request
 */

 const authToken =  (req, res, next) => {
     //query string parameters use for anything dat is optional 
     const token = req.body.token || req.query.token || req.headers['x-acess-token'];
     //decode the token tartgenerated by user payload during signin or signup
     if(token) {                                             //call back to get the decoded token on
         jwt.verify(token, process.env.SECRET_KEY, (err, authData) =>{
             //BASICALLY verify the given token using a secret key or public key to get a decoded token
             //authData is to verify the authenticity of the source of data
             if(err) {
                 res.status(401);
                 res.json({
                     status:'failed',
                     message:'Authentication failed token is either invalid or expired'
                 });
             }else {
                  req.authData = authData;

                  console.log('auth====================',authData);
                 
                 next();
             }
         })

     } else {
         res.status(403).json({
             status:'failed',
             message:'wrong token. provide a valid token'
         })
     }
     
 }
 export default authToken;